{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "environmentName": {
      "type": "string"
    },
    "sharedFrontEndAppServicePlanName": {
      "type": "string"
    },
    "sharedFrontEndSubnetResourceId": {
      "type": "string"
    },
    "sharedBackEndAppServicePlanName": {
      "type": "string"
    },
    "sharedBackEndSubnetResourceId": {
      "type": "string"
    },
    "sharedEnvResourceGroup": {
      "type": "string"
    },
    "sharedEnvVirtualNetworkName": {
      "type": "string"
    },
    "workerSubnetObject": {
      "type": "object"
    },
    "subnetServiceEndpointList": {
      "type": "array"
    },
    "subnetDelegations": {
      "type": "array"
    },
    "aspSize": {
      "type": "string",
      "defaultValue": "1"
    },
    "aspInstances": {
      "type": "int",
      "defaultValue": 1
    },
    "aspSku": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "configurationStorageConnectionString": {
      "type": "securestring"
    },
    "loggingRedisConnectionString": {
      "type": "securestring"
    },
    "serviceName": {
      "type": "string"
    },
    "apiCustomHostname": {
      "type": "string"
    },
    "apiCertificateName": {
      "type": "string"
    },
    "sharedKeyVaultName": {
      "type": "string"
    },
    "frontEndAccessRestrictions": {
      "type": "array"
    },
    "backEndAccessRestrictions": {
      "type": "array"
    },
    "workerAccessRestrictions": {
      "type": "array"
    },
    "logLevel": {
      "type": "string"
    },
    "loggingRedisKey": {
      "type": "securestring"
    },
    "idaAudience": {
      "type": "string"
    },
    "idaTenant": {
      "type": "string"
    },
    "uiCustomHostname": {
      "type": "string"
    },
    "uiCertificateName": {
      "type": "string"
    },
    "redisConnectionType": {
      "type": "string"
    },
    "providerIdamsRealm": {
      "type": "string"
    },
    "providerIdamsMetaDataUrl": {
      "type": "string"
    },
    "redisSessionProviderConnectionString": {
      "type": "securestring"
    },
    "featureToggle": {
      "type": "object",
      "defaultValue": {
        "ManageReservations": true,
        "ProviderCreateCohortV2": true,
        "ProviderManageApprenticesV2": true,
        "ApprenticeDetailsV2": true,
        "CohortSummariesV2": true,
        "BulkUploadV2": false,
        "Traineeships": false
      }
    },
    "useStubProviderRelationships": {
      "type": "string"
    },
    "sharedManagementResourceGroup": {
      "type": "string"
    },
    "sharedSQLServerName": {
      "type": "string"
    },
    "elasticPoolName": {
      "type": "string"
    },
    "databaseSkuName": {
      "type": "string"
    },
    "databaseTier": {
      "type": "string"
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "resourceGroupLocation": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "cdnUrl": {
      "type": "string"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "apiAppServiceName": "[concat(variables('resourceNamePrefix'), 'api-as')]",
    "uiAppServiceName": "[concat(variables('resourceNamePrefix'), 'ui-as')]",
    "workerAppServiceName": "[concat(variables('resourceNamePrefix'), 'wkr-as')]",
    "workerAppServicePlanName": "[concat(variables('resourceNamePrefix'), 'wkr-asp')]",
    "databaseName": "[concat(variables('resourceNamePrefix'), '-db')]",
    "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
    "configNames": "SFA.DAS.ProviderApprenticeshipsService,SFA.DAS.Encoding,SFA.DAS.ProviderUrlHelper",
    "configNamesApi": "SFA.DAS.PasAccountApi"
  },
  "resources": [
    {
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/resourceGroups",
      "location": "[parameters('resourceGroupLocation')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('apiAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('apiAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('apiAppServiceName'), '-app-service-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('apiCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('apiAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedBackEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedBackEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "EnvironmentName",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "LogLevel",
                  "value": "[parameters('logLevel')]"
                },
                {
                  "name": "LoggingRedisKey",
                  "value": "[parameters('loggingRedisKey')]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "idaAudience",
                  "value": "[parameters('idaAudience')]"
                },
                {
                  "name": "idaTenant",
                  "value": "[parameters('idaTenant')]"
                },
                {
                  "name": "InstrumentationKey",
                  "value": "[reference(concat(variables('apiAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[variables('configNamesApi')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('apiCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('apiAppServiceName'), '-app-service-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('backEndAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('uiAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('uiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('uiAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('uiAppServiceName'), '-app-service-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('uiCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('uiAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('uiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedEnvResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "EnvironmentName",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "LoggingRedisKey",
                  "value": "[parameters('loggingRedisKey')]"
                },
                {
                  "name": "RedisConnection",
                  "value": "[parameters('redisConnectionType')]"
                },
                {
                  "name": "ProviderIdamsRealm",
                  "value": "[parameters('providerIdamsRealm')]"
                },
                {
                  "name": "ProviderIdamsMetaDataUrl",
                  "value": "[parameters('providerIdamsMetaDataUrl')]"
                },
                {
                  "name": "InstrumentationKey",
                  "value": "[reference(concat(variables('uiAppServiceName'), '-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(concat(variables('apiAppServiceName'), '-api-application-insights-', parameters('utcValue'))).outputs.ConnectionString.value]"
                },
                {
                  "name": "RedisSessionProviderConnectionString",
                  "value": "[parameters('redisSessionProviderConnectionString')]"
                },
                {
                  "name": "CurrentTime",
                  "value": ""
                },
                {
                  "name": "UseStubProviderRelationships",
                  "value": "[parameters('useStubProviderRelationships')]"
                },
                {
                  "name": "FeatureToggle.ManageReservations",
                  "value": "[parameters('FeatureToggle').ManageReservations]"
                },
                {
                  "name": "FeatureToggle.ProviderCreateCohortV2",
                  "value": "[parameters('FeatureToggle').ProviderCreateCohortV2]"
                },
                {
                  "name": "FeatureToggle.ProviderManageApprenticesV2",
                  "value": "[parameters('FeatureToggle').ProviderManageApprenticesV2]"
                },
                {
                  "name": "FeatureToggle.ApprenticeDetailsV2",
                  "value": "[parameters('FeatureToggle').ApprenticeDetailsV2]"
                },
                {
                  "name": "FeatureToggle.CohortSummariesV2",
                  "value": "[parameters('FeatureToggle').CohortSummariesV2]"
                },
                {
                  "name": "FeatureToggle.BulkUploadV2",
                  "value": "[parameters('FeatureToggle').BulkUploadV2]"
                },
                {
                  "name": "FeatureToggle.Traineeships",
                  "value": "[parameters('FeatureToggle').Traineeships]"
                },
                {
                  "name": "ConfigNames",
                  "value": "[variables('configNames')]"
                },
                {
                  "name": "Cdn:Url",
                  "value": "[parameters('cdnUrl')]"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('uiCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[reference(concat(variables('uiAppServiceName'), '-app-service-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('workerAppServiceName'), '-app-service-plan-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('workerAppServicePlanName')]"
          },
          "aspSize": {
            "value": "[parameters('aspSize')]"
          },
          "aspInstances": {
            "value": "[parameters('aspInstances')]"
          },
          "nonASETier": {
            "value": "[parameters('aspSku')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(parameters('workerSubnetObject').name, '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('sharedEnvVirtualNetworkName')]"
          },
          "subnetName": {
            "value": "[parameters('workerSubnetObject').name]"
          },
          "subnetAddressPrefix": {
            "value": "[parameters('workerSubnetObject').addressSpace]"
          },
          "serviceEndpointList": {
            "value": "[parameters('subnetServiceEndpointList')]"
          },
          "delegations": {
            "value": "[parameters('subnetDelegations')]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('workerAppServiceName'), '-sql-server-firewall-rule-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'sql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverName": {
            "value": "[parameters('sharedSQLServerName')]"
          },
          "subnetResourceIdList": {
            "value": "[createArray(reference(concat(parameters('workerSubnetObject').name, '-', parameters('utcValue'))).outputs.SubnetResourceId.value)]"
          }
        }
      }
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('workerAppServiceName'), '-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('workerAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('workerAppServiceName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('workerAppServiceName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('workerAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('workerAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[variables('resourceGroupName')]"
          },
          "subnetResourceId": {
            "value": "[reference(concat(parameters('workerSubnetObject').name, '-', parameters('utcValue'))).outputs.subnetResourceId.value]"
          },
          "deployStagingSlot": {
            "value": false
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "LoggingRedisConnectionString",
                  "value": "[parameters('loggingRedisConnectionString')]"
                },
                {
                  "name": "LoggingRedisKey",
                  "value": "[parameters('loggingRedisKey')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "EnvironmentName",
                  "value": "[parameters('environmentName')]"
                }
              ]
            }
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('workerAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[variables('resourceGroupName')]",
        "[concat(variables('workerAppServiceName'), '-app-service-plan-', parameters('utcValue'))]"
      ]
    },
    {
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('databaseName'), '-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "databaseName": {
            "value": "[variables('databaseName')]"
          },
          "sqlServerName": {
            "value": "[parameters('sharedSQLServerName')]"
          },
          "elasticPoolName": {
            "value": "[parameters('elasticPoolName')]"
          },
          "databaseSkuName": {
            "value": "[parameters('databaseSkuName')]"
          },
          "databaseTier": {
            "value": "[parameters('databaseTier')]"
          },
          "logAnalyticsSubscriptionId": {
            "value": "[parameters('logAnalyticsSubscriptionId')]"
          },
          "logAnalyticsResourceGroup": {
            "value": "[parameters('sharedManagementResourceGroup')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "ApiAppServiceName": {
      "type": "string",
      "value": "[variables('apiAppServiceName')]"
    },
    "UiAppServiceName": {
      "type": "string",
      "value": "[variables('uiAppServiceName')]"
    },
    "WorkerAppServiceName": {
      "type": "string",
      "value": "[variables('workerAppServiceName')]"
    },
    "DatabaseName": {
      "type": "string",
      "value": "[variables('databaseName')]"
    },
    "ResourceGroupName": {
      "type": "string",
      "value": "[variables('resourceGroupName')]"
    }
  }
}