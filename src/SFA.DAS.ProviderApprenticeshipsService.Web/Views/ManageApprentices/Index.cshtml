@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.ManageApprenticeshipsViewModel

@{
    ViewBag.Title = "Manage apprentices";
    ViewBag.PageId = "manage-apprentices";
}

@functions
            {
    public string GetLinkForPage(int pageNumber)
    {
        var queryStringValues = HttpUtility.ParseQueryString(Request.QueryString.ToString());

        queryStringValues.Set("pageNumber", pageNumber.ToString());

        return $"{Request.Url.AbsolutePath}?{queryStringValues}";
    }

    public Tuple<int, int> GetPreviousLinkApprenticeshipCounts()
    {
        var lowerValue = (Model.PageNumber - 2) * Model.PageSize + 1;
        int upperValue = (Model.PageNumber - 1) * Model.PageSize;

        return new Tuple<int, int>(lowerValue, upperValue);
    }

    public Tuple<int, int> GetNextLinkApprenticeshipCounts()
    {
        var lowerValue = ((Model.PageNumber) * Model.PageSize) + 1;
        int upperValue;

        if (Model.PageNumber == Model.TotalPages - 1)
        {
            var remainder = Model.TotalApprenticeships % Model.PageSize;
            upperValue = remainder == 0 ? Model.TotalApprenticeships * Model.PageSize : (Model.PageSize * (Model.TotalPages - 1)) + remainder;
        }
        else
        {
            upperValue = (Model.PageNumber + 1) * Model.PageSize;
        }

        return new Tuple<int, int>(lowerValue, upperValue);
    }
}

@{ 
    var pagePreviousLinkValues = GetPreviousLinkApprenticeshipCounts();
    var pageNextLinkValues = GetNextLinkApprenticeshipCounts();
}

<h1 class="heading-xlarge">Manage your apprentices</h1>

<div class="grid-row"> 
    <div class="column-one-third">       
        <form method="GET" action="@Url.Action("Index")" novalidate="novalidate">
            @Html.Partial("ApprenticeshipFilters", Model.Filters)
            <button type="submit" class="button" value="Filter">Filter apprentices</button>
            <p>
                <a href="@Url.Action("Index")" title="Reset" class="button text-link reset-link">Reset</a>
            </p>
        </form>
    </div>


    <div class="column-two-thirds">   
        @if (Model.TotalApprenticeships == 0 )
        {
            <div class="panel panel-border-wide alert-default">
                <p>Once you and the employer have approved a cohort, the apprentices from that cohort will appear here.</p>
            </div>
        }
        else
        {
            <table class="tableResponsive provider-list-view">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Date of birth</th>
                    <th>Unique learner number</th>
                    <th>Status</th>
                    <th>Alerts</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>

                @foreach (var apprenticeships in Model.Apprenticeships)
                {
                    <tr>
                        <td>
                            @apprenticeships.FirstName @apprenticeships.LastName
                        </td>

                        <td>
                            @if (apprenticeships.DateOfBirth != null)
                            {
                                @apprenticeships.DateOfBirth.Value.ToGdsFormat()
                            }
                        </td>
                        <td>
                            @apprenticeships.Uln
                        </td>
                        <td>
                            @apprenticeships.Status &nbsp;
                        </td>
                        <td>
                            @foreach (var alert in @apprenticeships.Alerts)
                            {
                                <div>@alert</div>
                            }
                            &nbsp;
                        </td>
                        <td>
                            <a href="@Url.Action("Details", new {Model.ProviderId, hashedApprenticeshipId = apprenticeships.HashedApprenticeshipId})"
                               title="View  @apprenticeships.FirstName @apprenticeships.LastName"
                               aria-label="View @apprenticeships.FirstName @apprenticeships.LastName">View</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            if (!Model.Apprenticeships.Any())
            {
                <div>There are currently no apprentices that match your search.</div> 
            }

            if (Model.Apprenticeships.Any())
            {
                <nav role="navigation">
                    <ul class="previous-next-navigation">
                        @if (Model.PageNumber != 1)
                        {
                            <li class="previous">
                                <a href="@GetLinkForPage(Model.PageNumber - 1)">
                                    Previous <span class="visuallyhidden">page</span>
                                    <span class="page-numbers">Apprentices @pagePreviousLinkValues.Item1 to @pagePreviousLinkValues.Item2</span>
                                </a>
                            </li>
                        }

                        @if (Model.PageNumber < Model.TotalPages)
                        {
                            <li class="next">
                                <a href="@GetLinkForPage(Model.PageNumber + 1)">
                                    Next <span class="visuallyhidden">page</span>
                                    <span class="page-numbers">Apprentices @pageNextLinkValues.Item1 to @pageNextLinkValues.Item2</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
    </div>
</div>




@section breadcrumb {
        <div class="breadcrumbs">
            <a href="@Url.Action("Index", "Account")" aria-label="Back to account home" class="back-link">Back</a>
        </div>
    }


