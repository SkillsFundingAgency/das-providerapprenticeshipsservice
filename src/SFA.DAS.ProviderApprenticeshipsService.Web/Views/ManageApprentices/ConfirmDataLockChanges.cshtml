@using SFA.DAS.Commitments.Api.Types.DataLock.Types
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models.DataLock
@model DataLockMismatchViewModel

@{
    ViewBag.Title = "Change apprentice details";
    ViewBag.PageID = "datalock-details-change";
}

<div class="grid-row">
    <div class="column-two-thirds">
        @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

        <h1 class="heading-xlarge">Change apprentice details</h1>

        <p>A request will be sent to @Model.EmployerName to approve the following changes in the apprenticeship service.</p>

        @{
            var datalocks = Model.DataLockSummaryViewModel.DataLockWithOnlyPriceMismatch
                .OrderBy(x => x.IlrEffectiveFromDate)
                .ToList();

            var change = 0;
            foreach (var datalock in datalocks)
            {
                change++;

                var priceHistory = Model.PriceHistory
                    .OrderByDescending(x => x.FromDate)
                    .First(x => x.FromDate <= datalock.IlrEffectiveFromDate.Value);

                <h3 class="heading-small">Change @change</h3>

                <table>
                    <thead>
                    <tr>
                        <td></td>
                        <td>Currently</td>
                        <td>Change to</td>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>From date</td>
                        <td>
                            @{
                                if (priceHistory != null)
                                {
                                    <span>@priceHistory.FromDate.Date.ToGdsFormat()</span>
                                }
                            }
                        </td>
                        <td>@datalock.IlrEffectiveFromDate.Value.Date.ToGdsFormat()</td>
                    </tr>
                    <tr>
                        <td>Total apprenticeship training price</td>
                        <td>
                            @{
                                if (priceHistory != null)
                                {
                                    <span>@priceHistory.Cost.FormatCost()</span>
                                }
                            }
                        </td>
                        <td>@datalock.IlrTotalCost.FormatCost()</td>
                    </tr>
                    </tbody>
                </table>

            }
        }

    </div>
</div>

<div class="grid-row">
    <div class="column-two-thirds">
        
        <form method="POST" action="@Url.Action("ConfirmDataLockChangesPost")" novalidate="novalidate">
            
            @Html.AntiForgeryToken()

            <div class="form-group">

                <fieldset>
                    <h2 class="heading-medium">Do you want to request these changes?</h2>
                    <legend class="visually-hidden">How do you want to fix the mismatch?</legend>
                    <div class="form-group @Html.AddClassIfPropertyInError(x => x.SubmitStatusViewModel, "error")">
                        @Html.ValidationMessageFor(m => m.SubmitStatusViewModel, "Please choose an option", new { id = "error-message-" + Html.IdFor(m => m.SubmitStatusViewModel) })
                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.Confirm)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.Confirm, new {id = RadioButtonId(SubmitStatusViewModel.Confirm)})
                            <span>Yes, request this change</span>
                        </label>

                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.None)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.None, new {id = RadioButtonId(SubmitStatusViewModel.None)})
                            <span>No, leave for now</span>
                        </label>
                    </div>

                    @*@Html.HiddenFor(m => m.DataLockEventId)*@
                    <input type="submit" class="button" id="fix-mismatch" value="Finish"/>
                </fieldset>
            </div>
        </form>

    </div>
</div>


@functions
{
    public string RadioButtonId(SubmitStatusViewModel statusViewModel)
    {
        return $"{Html.IdFor(m => m.SubmitStatusViewModel)}-{statusViewModel}";
    }
}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Details")" aria-label="Back to apprentice details" class="back-link">Back to apprentice details</a>
    </div>
}