@using SFA.DAS.Commitments.Api.Types.DataLock.Types
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models.DataLock
@model DataLockMismatchViewModel

@{
    ViewBag.Title = "Change apprentice details";
    ViewBag.PageID = "confirm-datalock-changes";
}

<div class="grid-row">
    <div class="column-two-thirds">
        @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

        <h1 class="heading-xlarge">Request Price change to match the ILR</h1>

        <p>A request will be sent to @Model.EmployerName to approve the following changes in the apprenticeship service.</p>

        <table class="app-data">
            <tbody>
                <tr>
                    <td class="first-child">Name</td>
                    <td class="first-child"> @Model.DasApprenticeship.FirstName @Model.DasApprenticeship.LastName</td>
                </tr>
                <tr>
                    <td>Unique learner number</td>
                    <td>@Model.DasApprenticeship.ULN</td>
                </tr>
                <tr>
                    <td>Apprenticeship training course</td>
                    <td>@Model.DasApprenticeship.TrainingName</td>
                </tr>
            </tbody>
        </table>

        <br />

        @{
            var datalocks = Model.DataLockSummaryViewModel.DataLockWithOnlyPriceMismatch
                .OrderBy(x => x.IlrEffectiveFromDate)
                .ToList();

            var change = 0;
            foreach (var datalock in datalocks)
            {
                change++;

                var priceHistory = Model.PriceHistory
                    .OrderByDescending(x => x.FromDate)
                    .First(x => x.FromDate <= datalock.IlrEffectiveFromDate.Value);

                <h2 class="heading-small">Change @change</h2>




                <div class="grid-row">
                    <div class="column-one-half">

                        <table>
                            <thead>
                                <tr>
                                    <th>Currently</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Price Period</td>
                                    <td>
                                        @{
                                            if (priceHistory != null)
                                            {
                                                <span>From @priceHistory.FromDate.Date.ToGdsFormat()</span>
                                            }
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td>Total apprenticeship training price</td>
                                    <td>
                                        @{
                                            if (priceHistory != null)
                                            {
                                                <span>@priceHistory.Cost.FormatCost()</span>
                                            }
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="column-one-half">
                        <table>
                            <thead>
                                <tr>
                                    <th>Change to</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Price Period</td>
                                    <td>@GetPriceDetails(datalock.IlrEffectiveFromDate.Value, datalock.IlrEffectiveToDate)</td>
                                </tr>
                                <tr>
                                    <td>Total apprenticeship training price</td>
                                    <td>@datalock.IlrTotalCost.FormatCost()</td>
                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>

               }
        }

    </div>
</div>

<div class="grid-row">
    <div class="column-two-thirds">

        <form method="POST" action="@Url.Action("ConfirmDataLockChangesPost")" novalidate="novalidate">

            @Html.AntiForgeryToken()

            <div class="form-group">

                <fieldset>
                    <h2 class="heading-medium">Send change request?</h2>
                    <legend class="visually-hidden">How do you want to fix the mismatch?</legend>
                    <div class="form-group @Html.AddClassIfPropertyInError(x => x.SubmitStatusViewModel, "error")">
                        @Html.ValidationMessageFor(m => m.SubmitStatusViewModel, "Please choose an option", new { id = "error-message-" + Html.IdFor(m => m.SubmitStatusViewModel) })
                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.Confirm)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.Confirm, new { id = RadioButtonId(SubmitStatusViewModel.Confirm) })
                            <span>Yes, send request now</span>
                        </label>

                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.None)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.None, new { id = RadioButtonId(SubmitStatusViewModel.None) })
                            <span>No, don't send</span>
                        </label>
                    </div>

                    @*@Html.HiddenFor(m => m.DataLockEventId)*@

                    <div class="grid-row">
                        <div class="column-one-half">
                            input type="submit" class="button" id="fix-mismatch" value="Continue" />
                        </div>
                        <div class="column-one-half">
                            <a href="@Url.Action("Details")" aria-label="Cancel"> Cancel</a>
                        </div>
                    </div>
                    
                </fieldset>
            </div>
        </form>

    </div>
</div>


@functions
{
    public string RadioButtonId(SubmitStatusViewModel statusViewModel)
    {
        return $"{Html.IdFor(m => m.SubmitStatusViewModel)}-{statusViewModel}";
    }

    public string GetPriceDetails(DateTime fromDate, DateTime? toDate)
    {
        var priceDetails = string.Empty;

        if (toDate.HasValue)
        {
            priceDetails = $"{fromDate.ToGdsFormat()} to {toDate.Value.ToGdsFormat()}";
        }
        else
        {
            priceDetails = $"From {fromDate.ToGdsFormat()}";
        }

        return priceDetails;
    }


}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Details")" aria-label="Back to apprentice details" class="back-link">Back to apprentice details</a>
    </div>
}
