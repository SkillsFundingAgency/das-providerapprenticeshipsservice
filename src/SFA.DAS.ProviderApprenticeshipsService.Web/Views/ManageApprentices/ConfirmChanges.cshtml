@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.UpdateApprenticeshipViewModel
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions;
@{
    ViewBag.Title = "Confirm changes";
    ViewBag.PageID = "confirm-edited-changes";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <form method="POST" action="@Url.Action("SubmitChanges")" novalidate="novalidate">
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)
            @Html.AntiForgeryToken()

            <h1 class="heading-xlarge">Confirm changes</h1>
            <table class="edited-changes">
                <thead>
                    <tr>
                        <th></th>
                        <th>Current</th>
                        <th>Changed to</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!string.IsNullOrEmpty(Model.FirstName))
                    {
                        <tr>
                            <td>First name</td>
                            <td>@Model.OriginalApprenticeship.FirstName </td>
                            <td class="changed-item">@Model.FirstName</td>
                            @Html.Hidden("FirstName", Model.FirstName)
                        </tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.LastName))
                    {
                        <tr>
                            <td>Last name</td>
                            <td>@Model.OriginalApprenticeship.LastName </td>
                            <td class="changed-item">@Model.LastName</td>
                            @Html.Hidden("LastName", Model.LastName)
                        </tr>
                    }

                    @if (Model.DateOfBirth?.DateTime != null)
                    {
                        <tr>
                            <td>Date of birth</td>
                            <td>@Model.OriginalApprenticeship.DateOfBirth.Value.ToGdsFormat() </td>
                            <td class="changed-item">@Model.DateOfBirth.DateTime.Value.ToGdsFormat()</td>
                            @Html.Hidden("DateOfBirth.Day", Model.DateOfBirth.Day)
                            @Html.Hidden("DateOfBirth.Month", Model.DateOfBirth.Month)
                            @Html.Hidden("DateOfBirth.Year", Model.DateOfBirth.Year)
                        </tr>
                    }

                    @if (Model.ULN != null)
                    {
                        <tr>
                            <td>Unique learner number</td>
                            <td>@Model.OriginalApprenticeship.ULN </td>
                            <td class="changed-item">@Model.ULN</td>
                            @Html.Hidden("ULN", Model.ULN)
                        </tr>
                    }

                    @if (Model.TrainingName != null)
                    {
                        <tr>
                            <td>Apprenticeship training course</td>
                            <td>@Model.OriginalApprenticeship.TrainingName </td>
                            <td class="changed-item">@Model.TrainingName</td>
                            @Html.Hidden("TrainingCode", Model.TrainingCode)
                        </tr>
                    }

                    @if (Model.StartDate?.DateTime != null)
                    {
                        <tr>
                            <td>Planned training start date</td>
                            <td>@Model.OriginalApprenticeship.StartDate.Value.ToGdsFormat() </td>
                            <td class="changed-item">@Model.StartDate.DateTime.Value.ToGdsFormat()</td>
                            @Html.Hidden("StartDate.Month", Model.StartDate.Month)
                            @Html.Hidden("StartDate.Year", Model.StartDate.Year)
                        </tr>
                    }

                    @if (Model.EndDate?.DateTime != null)
                    {
                        <tr>
                            <td>Planned training end date</td>
                            <td>@Model.OriginalApprenticeship.EndDate.Value.ToGdsFormat() </td>
                            <td class="changed-item">@Model.EndDate.DateTime.Value.ToGdsFormat()</td>
                            @Html.Hidden("EndDate.Month", Model.EndDate.Month)
                            @Html.Hidden("EndDate.Year", Model.EndDate.Year)
                        </tr>
                    }

                    @if (Model.Cost != null)
                    {
                        <tr>
                            <td>Cost</td>
                            <td>@Model.OriginalApprenticeship.Cost.FormatCost() </td>
                            <td class="changed-item">@Model.Cost.FormatCost() </td>
                            @Html.Hidden("Cost", Model.Cost)
                        </tr>
                    }

                    @if (Model.EmployerRef != null)
                    {
                        <tr>
                            <td>Reference</td>
                            <td>@Model.OriginalApprenticeship.EmployerRef</td>
                            <td class="changed-item">@Model.EmployerRef</td>
                            @Html.Hidden("EmployerRef", Model.EmployerRef)
                        </tr>
                    }

                </tbody>
            </table>

            <h1 class="heading-medium">Do you want to make these changes?</h1>
            <fieldset>
                <legend class="visually-hidden">Do you want to make these changes?</legend>

                <label class="block-label selection-button-radio" for="changes-confirmend-true">
                    @Html.RadioButton("ChangesConfirmed", true, new { id = "changes-confirmed-true" })
                    Yes, change these details
                </label>
                <label class="block-label selection-button-radio" for="changes-confirmend-false">
                    @Html.RadioButton("ChangesConfirmed", false, new { id = "changes-confirmed-false" })
                    No, don't change these details
                </label>
            </fieldset>

            @Html.Hidden("OriginalApprenticeshipDecoded", @Json.Encode(Model.OriginalApprenticeship))
            <button type="submit" class="button" aria-label="Finish">Finish</button>

            <div class="column-one-thirds">

            </div>
        </form>
    </div>
</div>


@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Index", "ManageApprentices")" aria-label="Back to all apprentices" class="back-link">Back</a>
    </div>
}