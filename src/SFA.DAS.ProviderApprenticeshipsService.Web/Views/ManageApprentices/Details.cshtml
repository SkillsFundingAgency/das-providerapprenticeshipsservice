@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.ApprenticeshipDetailsViewModel

@{
    ViewBag.Title = "Apprentice detail";
    ViewBag.PageId = "apprentices-detail";
}

<div class="grid-row list-apprentice">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">@Model.FirstName @Model.LastName</h1>
        
        @if (Model.PendingChanges == PendingChanges.ReadyForApproval)
            {
            <div class="panel panel-border-wide alert-default">
                <p>There are changes to this apprentice's details that you need to review.  Until you've reviewed the changes, you'll only be able to edit the apprentice's status. </p>
                
            </div>
        }
        else if (Model.PendingChanges == PendingChanges.WaitingForApproval)
        {
            <div class="panel panel-border-wide">
                <p>
                    There are changes to this apprentice's details that are waiting for approval by the employer.  You can continue to edit this apprentice if you need to.
                
                </p>
            </div>
        }

        <table class="status-section">
            <thead>
                <tr>
                    <th colspan="2">Status</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Status</td>
                    <td>@Model.Status</td>
                </tr>             
            </tbody>
        </table>

        <table class="apprentice-section">
            <thead>
                <tr>
                    <th colspan="2">Apprentice
                    
                    @if (Model.PendingChanges == PendingChanges.None)
                    {
                        <a href="@Url.RouteUrl("EditApprovedApprentice")" class="float-right">Edit</a>
                    }
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Name</td>
                    <td>@Model.FirstName @Model.LastName</td>
                </tr>
                <tr>
                    <td>Date of birth</td>
                    <td>
                        @if (Model.DateOfBirth.HasValue)
                        {
                            @Model.DateOfBirth.Value.ToGdsFormat()
                        }
                    </td>
                </tr>
                <tr>
                    <td>Unique learner number</td>
                    <td>@Model.Uln</td>
                </tr>

            </tbody>
        </table>

        <table class="training-section">
            <thead>
                <tr>
                    <th colspan="2">Training</th>
                </tr>
            </thead>
            <tbody>
            <tr>
                <td>Apprenticeship training course</td>
                <td>@Model.TrainingName</td>

            </tr>
            <!--
                enhancement
                <tr>
                    <td>Employer</td>
                    <td>@Model.EmployerName </td>
                </tr>
                -->

            <!--
            enhancement
                <tr>
                    <td>End-point assessor</td>
                    <td>Pham Assessment Ltd</td>
                </tr>
            -->

            </tbody>
        </table>

        <table class="dates-section">
            <thead>
                <tr>
                    <th colspan="3">Dates</th>                
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Training start date</td>
                    <td>
                        @if (Model.StartDate.HasValue)
                        {
                            @Model.StartDate.Value.ToGdsFormat()
                        }
                    </td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td>Training end date</td>
                    <td>
                        @if (Model.EndDate.HasValue)
                        {
                            @Model.EndDate.Value.ToGdsFormat()
                        }
                    </td>
                    <td>&nbsp;</td>
                </tr>
               <!--improvisation <tr>
                    <td>Time left</td>
                    <td> 10 months</td>
                    <td>&nbsp;</td>
                </tr>-->

            </tbody>
        </table>

        <table class="payment-section">
            <thead>
                <tr>
                    <th colspan="3">Payment</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Apprenticeship price</td>
                    <td>
                        @FormatCost(Model.Cost)
                    </td>
                    <td>&nbsp;</td>
                </tr>
               <!-- improvisation <tr>
                    <td>Amount paid to date</td>
                    <td>&pound;1,312.56</td>
                    <td><a href="#">View</a></td>
                </tr>
                <tr>
                    <td>Balance</td>
                    <td>&pound;1,645.00</td>
                    <td><a href="#">View</a></td>
                </tr>-->

            </tbody>
        </table>

    </div>
    <div class="column-one-third">
        <!--
            enhancement
        <h2 class="heading-medium">Change history</h2>
        <p>There have been no changes.</p>
        -->
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Index", "ManageApprentices")" aria-label="Back to your apprentices" class="back-link">Back to your apprentices</a>
    </div>
}

@functions {
    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return $"£{cost.Value:n0}";
    }
}