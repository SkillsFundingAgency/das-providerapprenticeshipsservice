@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models.DataLock
@model ApprenticeshipDetailsViewModel

@{
    ViewBag.Title = "Apprentice detail";
    ViewBag.PageId = "apprentices-detail";
}

<div class="grid-row list-apprentice">
    <div class="column-two-thirds">
       
        @if (Model.PendingChanges == PendingChanges.ReadyForApproval)
            {
            <div class="purple-border">
                <p>There are changes to this apprentice's details that you need to review.</p>
                <a href="@Url.RouteUrl("ReviewApprovedApprenticeChange")" aria-label="Review changes" class="">Review changes</a>
            </div>
        }
        else if (Model.PendingChanges == PendingChanges.WaitingForEmployer)
        {
            <div class="purple-border">
                <p>
                    There are changes to this apprentice's details that are waiting for approval by the employer.
                </p>
                <a href="@Url.RouteUrl("UndoApprovedApprenticeChange")" aria-label="View changes" class="">View changes</a>
            </div>
        }

        @if (Model.DataLockSummaryViewModel.ShowChangesRequested)
        {
            <div class="purple-border blue-alerts">
                <h2 class="heading-medium">
                    Change request sent
                </h2>
                <p>
                    @DataLockMessage(Model.FirstName, Model.LastName)
                </p>
            </div>
        }

        @if (Model.DataLockSummaryViewModel.ShowChangesPending)
        {
            <div class="purple-border blue-alerts">
                <h2 class="heading-medium">
                    Change request pending
                </h2>
                <p>
                    @DataLockMessage(Model.FirstName, Model.LastName)
                </p>
            </div>
        }

        @if (Model.DataLockSummaryViewModel.ShowIlrDataMismatch)
        {
            <div class="purple-border blue-alerts">
                <h2 class="heading-medium">
                    @Model.DataLockSummaryViewModel.DataLockSummaryTitle
                </h2>
                <p>
                  @DataLockMessage(Model.FirstName,Model.LastName)
                </p>

                @{
                    if (Model.PendingChanges == PendingChanges.None && !Model.DataLockSummaryViewModel.ShowChangesPending && !Model.DataLockSummaryViewModel.ShowChangesRequested)
                    {
                        if (Model.DataLockSummaryViewModel.ShowCourseDataLockTriageLink && Model.DataLockSummaryViewModel.ShowPriceDataLockTriageLink)
                        {
                            <a href="@Url.RouteUrl("UpdateDataLock")" aria-label="View details" class="">View price mismatch</a>
                            <br />
                            <a href="@Url.RouteUrl("RequestRestart")" aria-label="View details" class="">View course mismatch</a>
                        }
                        else
                        {
                            if (Model.DataLockSummaryViewModel.ShowCourseDataLockTriageLink)
                            {
                                <a href="@Url.RouteUrl("RequestRestart")" aria-label="View details" class="">View details</a>
                            }
                            else if (Model.DataLockSummaryViewModel.ShowPriceDataLockTriageLink)
                            {
                                <a href="@Url.RouteUrl("UpdateDataLock")" aria-label="View details" class="">View details</a>
                            }
                        }
                    }
                }
            </div>
        }

        <h1 class="heading-xlarge">@Model.FirstName @Model.LastName</h1>

        <table id="app-status">
            <thead>
                <tr>
                    <th colspan="2">Apprentice status</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Status</td>
                    <td>@Model.Status</td>
                </tr>
            </tbody>
        </table>

        <table id="overview-section">
            <thead>
                <tr>
                    <th colspan="2">Overview</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Employer</td>
                    <td>@Model.EmployerName</td>
                </tr>
                <tr>
                    <td>Cohort reference</td>
                    <td>@Model.CohortReference</td>
                </tr>
            </tbody>
        </table>

        <table id="apprentice-section">
            <thead>
                <tr>
                    <th colspan="2">
                        Apprentice
                        @if (Model.EnableEdit)
                        {
                            <a href="@Url.RouteUrl("EditApprovedApprentice")" class="float-right">Edit apprentice</a>
                        }
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Name</td>
                    <td>@Model.FirstName @Model.LastName</td>
                </tr>
                <tr>
                    <td>Date of birth</td>
                    <td>
                        @if (Model.DateOfBirth.HasValue)
                        {
                            @Model.DateOfBirth.Value.ToGdsFormat()
                        }
                    </td>
                </tr>
                <tr>
                    <td>Unique learner number</td>
                    <td>@Model.Uln</td>
                </tr>
                <tr>
                    <td>Apprenticeship training course</td>
                    <td>@Model.TrainingName</td>
                </tr>
                <tr>
                    <td>Training start date</td>
                    <td>
                        @if (Model.StartDate.HasValue)
                        {
                            @Model.StartDate.Value.ToGdsFormat()
                        }
                    </td>

                </tr>
                <tr>
                    <td>Training end date</td>
                    <td>
                        @if (Model.EndDate.HasValue)
                        {
                            @Model.EndDate.Value.ToGdsFormat()
                        }
                    </td>

                </tr>
                <tr>
                    <td>Total agreed apprenticeship price</td>
                    <td>@FormatCost(Model.Cost) </td>
                </tr>
                <tr>
                    <td>Reference </td>
                    <td>@Model.ProviderReference</td>
                </tr>

            </tbody>
        </table>

    </div>
    <div class="column-one-third">
        <!--
            enhancement
        <h2 class="heading-medium">Change history</h2>
        <p>There have been no changes.</p>
        -->
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Index", "ManageApprentices")" aria-label="Back to your apprentices" class="back-link">Back to your apprentices</a>
    </div>
}

@functions {
    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return $"£{cost.Value:n0}";
    }
    private string DataLockMessage(string firstName , string lastname)
    {
        return $"Payment for {firstName} {lastname} can't be made until this is resolved.";
    }

}

