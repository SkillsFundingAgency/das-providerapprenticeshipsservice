@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.ApprenticeshipViewModel
<div id="edit-started-apprentice">
    <div class="form-group first-child @Html.AddClassIfPropertyInError(x => x.FirstName, "error")">

        @Html.LabelFor(m => m.FirstName, "First name", new { @class = "form-label form-label-bold" })
        @Html.ValidationMessageFor(m => m.FirstName, null, new { id = "error-message-" + Html.IdFor(m => m.FirstName) })
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control form-control-3-4" })
    </div>
    <div class="form-group @Html.AddClassIfPropertyInError(x => x.LastName, "error")">
        @Html.LabelFor(m => m.LastName, "Last name", new { @class = "form-label form-label-bold" })
        @Html.ValidationMessageFor(m => m.LastName, null, new { id = "error-message-" + Html.IdFor(m => m.LastName) })
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control form-control-3-4" })
    </div>

    <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.DateOfBirth, "error") ">
        <hr />
        <span class="form-label-bold">Date of birth</span>
        <span class="form-hint">For example, 08 12 2001</span>

        <div class="form-date">
            @Html.ValidationMessageFor(m => m.DateOfBirth, null, new { id = "error-message-" + Html.IdFor(m => m.DateOfBirth), @class = "error-message" })

            <div class="form-group form-group-day">
                <label for="@Html.IdFor(m => m.DateOfBirth.Day)">
                    Day
                </label>
                @Html.TextBoxFor(m => m.DateOfBirth.Day, new { @class = "form-control length-limit", type = "number", maxlength="2", min="1", max="31", aria_labelledby = Html.IdFor(m => m.DateOfBirth.Day) })
            </div>
            <div class="form-group form-group-month">
                <label for="@Html.IdFor(m => m.DateOfBirth.Month)">
                    Month
                </label>
                @Html.TextBoxFor(m => m.DateOfBirth.Month, new { @class = "form-control length-limit", type = "number", maxlength="2", min="1", max="12", aria_labelledby = Html.IdFor(m => m.DateOfBirth.Month) })
            </div>
            <div class="form-group form-group-year">
                <label for="@Html.IdFor(m => m.DateOfBirth.Year)">
                    Year
                </label>
                <input aria-labelledby="@Html.IdFor(m => m.DateOfBirth.Year)" class="form-control length-limit" data-val="true" data-val-number="The field Year must be a number." id="@Html.IdFor(m => m.DateOfBirth.Year)" name="DateOfBirth.Year" type="number" maxlength="4" min="1900" max="9999" value="@Model.DateOfBirth.Year">
            </div>
        </div>
    </div>

    <div class="form-group">
        <hr />
        <label class="form-label-bold">
            Unique learner number
        </label>
        <span>
            @Model.ULN
        </span>
    </div>

    <div class="form-group">
        <hr />
        <label class="form-label-bold" for="TrainingCode">Apprenticeship training course</label>
        <span>@Model.TrainingName</span>
    </div>

    <div class="form-error-group form-group">
        <hr />
        <label class="form-label-bold">Planned training start date</label>
        <span>@Model.StartDate.DateTime.Value.ToGdsFormatWithoutDay() </span>

    </div>

    <div class="form-error-group form-group">
        <hr />
        <span class="form-label-bold">Planned training finish date</span>
        <span>@Model.EndDate.DateTime.Value.ToGdsFormatWithoutDay() </span>
    </div>

    <div class="form-group @Html.AddClassIfPropertyInError(x => x.Cost, "error")">
        <hr />
        @if (Model.IsInFirstCalendarMonthOfTraining)
        {
            <label for="@Html.IdFor(m => m.Cost)">
                <span class="form-label-bold">Total agreed apprenticeship price (excluding VAT)</span>
                <span class="form-hint">Enter the price, including any end-point assessment costs, in whole pounds. For example, for £1,500 enter 1500.</span>
                @Html.ValidationMessageFor(m => m.Cost, null, new { id = "error-message-" + Html.IdFor(m => m.Cost), @class = "error-message" })
            </label>
            <span class="heading-small">£ </span>
            @Html.TextBoxFor(m => m.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_labelledby = Html.IdFor(m => m.Cost), maxlength = "7" })
            <div class="approve-alert">
                <div class="panel panel-border-wide alert-blue">
                    You can update the total agreed apprenticeship price until <strong>@Model.StartDate.DateTime.Value.GetLastDayOfMonthDate().ToGdsFormat()</strong>
                    - after this date you'll need to make any changes through your ILR submission instead.
                </div>
            </div>
            <hr />

        }
        else
        {
            <label for="@Html.IdFor(m => m.Cost)">
                <span class="form-label-bold">Total agreed apprenticeship price (excluding VAT)</span>
            </label>
            <span class="heading-small">£ </span>
            <span>@Model.Cost</span>
            @Html.HiddenFor(m => m.Cost)
            <div class="approve-alert">
                <div class="panel panel-border-wide alert-blue">
                    If you want to change the total agreed apprenticeship price, you'll need to make the price change in your ILR
                    submission first. Once you've submitted your updated ILR, you'll see an option to update the price in the apprenticeship service.
                </div>
            </div>
            <hr />
        }
    </div>

    <div class="form-group last-child @Html.AddClassIfPropertyInError(x => x.ProviderRef, "error")">

        @Html.LabelFor(m => m.ProviderRef, "Reference (optional)", new { @class = "form-label-bold" })
        <span class="form-hint">Add a reference, such as employee number or location - this won’t be seen by the employer</span>
        @Html.ValidationMessageFor(m => m.ProviderRef, null, new { id = "error-message-" + Html.IdFor(m => m.ProviderRef) })
        @Html.TextBoxFor(m => m.ProviderRef, new { @class = "form-control form-control-3-4" })
    </div>
</div>
@Html.HiddenFor(m => m.ULN)
@Html.HiddenFor(m => m.TrainingCode)
@Html.HiddenFor(m => m.TrainingType)
@Html.HiddenFor(m => m.TrainingName)
@Html.HiddenFor(m => m.HasStarted)

@Html.HiddenFor(m => m.StartDate.Month)
@Html.HiddenFor(m => m.StartDate.Year)

@Html.HiddenFor(m => m.EndDate.Month)
@Html.HiddenFor(m => m.EndDate.Year)