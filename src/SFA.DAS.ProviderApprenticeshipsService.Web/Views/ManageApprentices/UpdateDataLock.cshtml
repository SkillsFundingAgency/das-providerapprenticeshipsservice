@using SFA.DAS.Commitments.Api.Types.DataLock.Types
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models.DataLock
@model DataLockMismatchViewModel
            
@{
    ViewBag.Title = "Apprenticeship data mismatch";
    ViewBag.PageID = "datalock-details-change";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Details of ILR data mismatch</h1>

        <p>There are mismatches where the data in the apprenticeship service and your ILR submission are different.</p>

        <table>
            <tr>
                <td>Name</td>
                <td>@Model.DasApprenticeship.FirstName @Model.DasApprenticeship.LastName</td>
            </tr>
            <tr>
                <td>Unique learner number</td>
                <td>@Model.DasApprenticeship.ULN</td>
            </tr>
            <tr>
                <td>Date of birth</td>
                <td>@Model.DasApprenticeship.DateOfBirth.DateTime</td>
            </tr>
        </table>
        
        @{
            //Price datalocks ONLY
            var datalocks = Model.DataLockViewModels.FindAll(x => x.DataLockErrorCode == DataLockErrorCode.Dlock07);

            var maxrows = Model.PriceHistory.Count > datalocks.Count
                ? Model.PriceHistory.Count
                : datalocks.Count;           
        }

        <table class="edited-changes">
            <thead>
                <tr>
                    <th colspan="2">Apprenticeship service</th>
                    <th colspan="2">ILR submission</th>
                </tr>
                <tr>
                    <th scope="col">From date</th>
                    <th scope="col">Total apprenticeship training price</th>
                    <th scope="col">From date</th>
                    <th scope="col">Total apprenticeship training price</th>
                </tr>
            </thead>
            <tbody>
            
                @for (var i = 0; i < maxrows; i++)
                {
                    var datalock = i < datalocks.Count
                        ? datalocks[i]
                        : null;

                    var priceHistory = i < Model.PriceHistory.Count
                        ? Model.PriceHistory[i]
                        : null;


                    <tr>
                        

                        @if (priceHistory != null)
                        {

                            <td>
                                @priceHistory.FromDate.ToGdsFormat()
                            </td>
                            <td>
                                @priceHistory.Cost.ToString("C")
                            </td>
                        }
                        else
                        {
                            <td colspan="2">&ndash;</td>
                        }

                        @if (datalock != null)
                        {
                            <td>
                                @datalock.IlrEffectiveFromDate.Value.ToGdsFormat()
                            </td>
                            <td>
                                @datalock.IlrTotalCost.FormatCost()
                            </td>
                        }
                        else
                        {
                            <td colspan="2">&ndash;</td>
                        }

                    </tr>
                }


                
                    @*if (datalock.DataLockErrorCode.HasFlag(DataLockErrorCode.Dlock09)
                         && Model.DasApprenticeship.StartDate.DateTime.HasValue
                         && datalock.IlrActualStartDate.HasValue)
                    {
                        <tr>
                            <td>@Model.DasApprenticeship.StartDate.DateTime.Value.ToGdsFormat() </td>
                            <td>@datalock.IlrActualStartDate.Value.ToGdsFormat()</td>
                        </tr>
                    }*@



            </tbody>
        </table>

    </div>

</div>

<div class="grid-row">
    <div class="column-two-thirds">
        <form method="POST" action="@Url.Action("UpdateDataLock")" novalidate="novalidate">
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)
            @Html.AntiForgeryToken()
            <div class="form-group @Html.AddClassIfPropertyInError(x => x.SubmitStatusViewModel, "error") ">
                <fieldset>
                    <h2 class="heading-medium">How do you want to fix the mismatch?</h2>
                    <legend class="visually-hidden">How do you want to fix the mismatch?</legend>
                    <div class="form-group">
                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.Confirm)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.Confirm, new { id = RadioButtonId(SubmitStatusViewModel.Confirm) })
                            <span>Start to update the details in the apprenticeship service</span>
                        </label>

                        @*<label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.UpdateDataInIlr)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.UpdateDataInIlr, new { id = RadioButtonId(SubmitStatusViewModel.UpdateDataInIlr) })
                            <span>Update the details through the ILR instead</span>
                        </label>*@

                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.None)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.None, new { id = RadioButtonId(SubmitStatusViewModel.None) })
                            <span>Leave for now</span>
                        </label>
                    </div>
                    
                    @*@Html.HiddenFor(m => m.DataLockEventId)*@
                    <input type="submit" class="button" id="fix-mismatch" value="Continue" />
                </fieldset>
            </div>
        </form>
    </div>
</div>


@functions
{
    public string RadioButtonId(SubmitStatusViewModel statusViewModel)
    {
        return $"{Html.IdFor(m => m.SubmitStatusViewModel)}-{statusViewModel}";
    }
}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Details")" aria-label="Back to apprentice details" class="back-link">Back to apprentice details</a>
    </div>
}