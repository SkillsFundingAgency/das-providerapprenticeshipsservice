@using SFA.DAS.Commitments.Api.Types
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.VerificationOfRelationshipViewModel
@{
    ViewBag.Title = "Confirm Relationship";
}
<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Your connection to the employer</h1>

        @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

        <div id="company-info">
            <strong>Name: </strong> @Model.LegalEntityName <br />
            <strong>Registered address: </strong> @Model.LegalEntityAddress <br />

            @if (Model.LegalEntityOrganisationType == OrganisationType.Charities)
            {
                <strong>Registered charity number: </strong> @Model.LegalEntityId <br />
            }
            else if (Model.LegalEntityOrganisationType == OrganisationType.CompaniesHouse)
            {
                <strong>Companies House number: </strong> @Model.LegalEntityId <br />
            }

        </div>


        <form action="@Url.Action("VerificationOfRelationship")" method="POST">
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.ProviderId)
            @Html.HiddenFor(m => m.HashedCommitmentId)
            @Html.HiddenFor(m => m.LegalEntityName)
            @Html.HiddenFor(m => m.LegalEntityAddress)
            @Html.HiddenFor(m => m.LegalEntityOrganisationType)

            <div class="form-group">

                <h2 id="confirm-organisation" class="heading-medium">Confirm your connection to @Model.LegalEntityName</h2>


                @if (!ViewData.ModelState.IsValid)
                {
                    <div>
                        @Html.ValidationMessageFor(m => m.OrganisationIsSameOrConnected, "Please select an option", new { id = "error-message-" + Html.IdFor(m => m.OrganisationIsSameOrConnected) })
                    </div>
                }

                <fieldset aria-describedby="confirm-organisation">
                    <label class="block-label" for="@RadioButtonId(false)">
                        @Html.RadioButtonFor(m => m.OrganisationIsSameOrConnected, false, new { id = RadioButtonId(false) })
                        <span id="confirmNo">It’s a separate organisation</span>
                    </label>

                    <label class="block-label" for="@RadioButtonId(true)">
                        @Html.RadioButtonFor(m => m.OrganisationIsSameOrConnected, true, new { id = RadioButtonId(true) })
                        <span id="confirmYes">It’s the same organisation, or a connected company or charity</span>
                    </label>
                </fieldset>

            </div>

            <details id="expand-collapse">
                <summary id="connected-company"><span class="summary">What is a connected company?</span></summary>
                <div class="panel panel-border-narrow" aria-describedby="#connected-company">
                    <p>An organisation is a connected company to yours if:</p>
                    <ul>
                        <li>your organisation has control of it</li>
                        <li>both organisations are controlled by the same people, such as a board of directors</li>
                    </ul>
                </div>
            </details>
            <input type="submit" class="button" id="continue" value="Continue" />

        </form>

    </div>
</div>


        @functions
{

            public string RadioButtonId(bool optionValue)
            {
                return $"{Html.IdFor(m => m.OrganisationIsSameOrConnected)}-{optionValue}";
            }

        }
