@using SFA.DAS.Commitments.Api.Types
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.CommitmentViewModel

<div class="grid-row">
    <div class="column-full">
        <a href="@Url.Action("Index", new { providerId = Model.Commitment.ProviderId })" aria-label="Back" class="link-back">Back</a>

        <h1 class="heading-xlarge">Add an apprentice</h1>
    </div>

</div>

<div class="grid-row">
    <div class="column-one-half employer-details">
        <p><span class="strong">Employer: </span>@Model.Commitment.LegalEntityName</p>
        <p><span class="strong">Cohort reference: </span>@Model.Commitment.Reference</p>
        <p><span class="strong">Status: </span>
            @if (Model.Commitment.EditStatus == EditStatus.ProviderOnly)
            {
                @Html.Raw("Ready for review")
            }
            else
            {
                @Model.Commitment.CommitmentStatus
            }
    </div>

    <div class="column-one-half employer-details">
        <p class="strong">Instructions:</p>
        <p>@(string.IsNullOrWhiteSpace(Model.LatestMessage) ? "No note added" : Model.LatestMessage)</p>
    </div>
</div>

@functions {
    public string GetApprenticesCountText(List<Apprenticeship> apprenticeships)
    {
        if (apprenticeships.Count == 1)
            return "1 Apprentice";

        return $"{apprenticeships.Count} Apprentices";
    }

    public string GetDateValue(DateTime? date)
    {
        if (!date.HasValue)
            return " - ";

        return date.Value.ToGdsFormatWithoutDay();
    }

    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return string.Format("{0:#}", cost.Value);
    }
}
<div class="grid-row">
    <div class="column-full">
        <p class="heading-medium">@GetApprenticesCountText(Model.Commitment.Apprenticeships)</p>
        <hr/>
            @{ var finishEditingText = Model.PendingChanges ? "Finished editing" : "Continue to approval"; }
            <a href="@Url.Action("Create", new { providerId = Model.Commitment.ProviderId, commitmentId = Model.Commitment.Id })" class="button-secondary" aria-label="Add an apprentice">Add an apprentice</a>
            <a class="button finishEditingBtn" href="@Url.Action("FinishEditing")" aria-label="@finishEditingText">@finishEditingText</a>
        <hr />
    </div>
</div>

<div class="grid-row">
    <div class="column-full">
        @if (Model.Commitment.Apprenticeships.Count == 0)
        {
            <div class="panel panel-filled">
              
                        <p>You haven't added any apprentices yet.</p>
                
            </div>
        }
        else
        {
            <table class="tableResponsive providerList">
                <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">ULN</th>
                    <th scope="col">Training course</th>
                    <th scope="col">Training dates</th>
                    <th scope="col" colspan="2">Cost</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Commitment.Apprenticeships)
                    {
                        <tr>
                            <td>@item.ApprenticeshipName &nbsp;</td>
                            <td>@item.ULN &nbsp;</td>
                            <td>@item.TrainingName &nbsp;</td>
                            <td>
                                @if (item.StartDate != null && item.EndDate != null)
                                {
                                    <span>
                                        GetDateValue(item.StartDate) to @GetDateValue(item.EndDate) &nbsp;
                                    </span>
                                }
                            </td>
                            <td>@FormatCost(item.Cost) &nbsp;</td>
                            <td><a href="@Url.Action("Edit", new { commitmentId = Model.Commitment.Id, id = item.Id })" title="Edit @item.ApprenticeshipName" aria-label="Edit @item.ApprenticeshipName">Edit</a></td>
                        </tr>
                    }
                </tbody>
            </table>

            @*<p>
                <a href="@Url.Action("Create", new { providerId = Model.Commitment.ProviderId, commitmentId = Model.Commitment.Id })"
                   class="button" name="commitment" aria-label="Add an apprentice">Add an apprentice</a>
            </p>*@
        }
    </div>
</div>




