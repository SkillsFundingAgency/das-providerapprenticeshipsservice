@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models
@model CommitmentDetailsViewModel

@{
    ViewBag.Title = "Add an apprentice";
    ViewBag.PageId = "apprentice-details";
}

<div class="grid-row">
    <div class="column-full">
        @if (!Model.HasApprenticeships)
        {
            <h1 class="heading-xlarge">Add an apprentice</h1>
        }
        else
        {
            <h1 class="heading-xlarge">Review your cohort</h1>
        }
    </div>
</div>

<!--
<div class="grid-row">
    <div class="column-one-half employer-details">
        <p><span class="strong">Employer: </span>@Model.LegalEntityName</p>
        <p><span class="strong">Cohort reference: </span>@Model.Reference</p>
        <p><span class="strong">Status: </span>@Model.Status.GetDescription()</p>
    </div>

    <div class="column-one-half employer-details">
        <p class="strong">Instructions:</p>
        <p>@(string.IsNullOrWhiteSpace(Model.LatestMessage) ? "No note added" : Model.LatestMessage)</p>
    </div>
</div>
-->
@functions {
    public string GetApprenticesCountText(IList<ApprenticeshipListItemViewModel> apprenticeships)
    {
        if (apprenticeships.Count == 1)
            return "1 Apprentice";

        return $"{apprenticeships.Count} Apprentices";
    }

    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return $"£{cost.Value:n0}";
    }

}

@helper GetValueOrDefault(string property)
{
if (!string.IsNullOrEmpty(property))
{
        <span>@property &nbsp;</span>
}
else
{
        <span>@Html.Raw("&ndash;")</span>
}
}

<div class="grid-row">
    <div class="column-full">
        @if (!Model.HasApprenticeships)
        {
            <div class="panel panel-border-wide alert-default">
                <p>You haven't added any apprentices yet. Use the options on this page to add apprentices.</p>
            </div>
        }
    </div>
</div>


<!-- <div class="grid-row">
        <div class="column-full">
            <p class="heading-medium">Review your cohort @GetApprenticesCountText(Model.Apprenticeships)</p>
        </div>
    </div>
-->

<div class="grid-row" id="review-cohorts">
    <div class="column-one-third all-apps">
        <div class="">
            <h2 class="bold-xlarge">10</h2>
            <p class="heading-small">Apprentices</p>
        </div>
    </div>
    <div class="column-one-third incomplete-apps">
        <div class="">
            <h2 class="bold-xlarge">4</h2>
            <p class="heading-small">Incomplete records</p>
        </div>
    </div>
    <div class="column-one-third total-cost">
        <div class="">
            <h2 class="bold-xlarge">&pound;13,816</h2>
            <p class="heading-small">Total cost</p>
        </div>
    </div>
</div>

<div class="grid-row">
    <div class="column-full employer-details">
        <p><span class="strong">Employer: </span>@Model.LegalEntityName</p>
    </div>
</div>

<div class="grid-row">
    <div class="column-full bulk-upload-buttons">
        <hr class="hr-top">

        @{ var finishEditingText = Model.PendingChanges ? "Save and continue" : "Continue to approval"; }
        <a href="@Url.Action("Create", new { Model.ProviderId, Model.HashedCommitmentId })" class="button button-secondary" aria-label="Add an apprentice">Add an apprentice</a>
        <a href="@Url.Action("UploadApprenticeships", "BulkUpload", new { Model.ProviderId, Model.HashedCommitmentId })" class="button button-secondary upload-btn" aria-label="Bulk upload apprentices">Bulk upload apprentices</a>
        <a class="button finishEditingBtn" href="@Url.Action("FinishEditing")" aria-label="@finishEditingText">@finishEditingText</a>
        <hr class="hr-bottom">
    </div>
</div>




@if (Model.Apprenticeships.Count > 0)
{
    <div class="grid-row">
        <div class="column-full">


            <table class="tableResponsive providerList">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">ULN</th>
                        <th scope="col">Training course</th>
                        <th scope="col">Training dates</th>
                        <th scope="col" colspan="2">Cost</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Apprenticeships)
                {
                        <tr>
                            <td>@GetValueOrDefault(item.ApprenticeshipName)</td>
                            <td>@GetValueOrDefault(item.ULN)</td>
                            <td>@GetValueOrDefault(item.TrainingName)</td>
                            <td>
                                @if (item.StartDate != null && item.EndDate != null)
                                {
                                    <span>
                                        @item.StartDate.Value.ToGdsFormatWithoutDay() to @item.EndDate.Value.ToGdsFormatWithoutDay() &nbsp;
                                    </span>
                                }
                                else
                                {
                                    <span>&ndash;</span>
                                }
                            </td>
                            <td>@GetValueOrDefault(FormatCost(item.Cost))</td>
                            <td><a href="@Url.Action("Edit", new { Model.HashedCommitmentId, item.HashedApprenticeshipId })" title="Edit @item.ApprenticeshipName" aria-label="Edit @item.ApprenticeshipName">Edit details</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("ReadyForReview")" aria-label="Back" class="back-link">Back</a>
    </div>
}



