﻿@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.FinishEditingViewModel

@{
    ViewBag.Title = "Finish editing";
    ViewBag.PageId = "finish-editing";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <a href="@Url.Action("Details", 
                new { providerId = Model.ProviderId, commitmentId = Model.CommitmentId })" aria-label="Back" class="link-back">Back</a>

        <h1 class="heading-xlarge">Finish editing</h1>
        <div>
            <form action="@Url.Action("FinishEditing")" method="POST">
                @Html.AntiForgeryToken()
                @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

              

                <legend class="visuallyhidden">Things to do next</legend>
                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.SaveOrSendStatus, "error")">
                    <div>
                        @Html.ValidationMessageFor(m => m.SaveOrSendStatus, "Please choose an option", new { id = "error-message-" + Html.IdFor(m => m.SaveOrSendStatus) })
                    </div>
                    @if (Model.ApproveAndSend)
                    {
                        <label class="block-label" for="@Html.IdFor(m => m.SaveOrSendStatus)-SendApprove">
                            @Html.RadioButtonFor(m => m.SaveOrSendStatus, SaveOrSendStatus.ApproveAndSend, new { id = Html.IdFor(m => m.SaveOrSendStatus) + "-SendApprove" })
                            <span id="changeOne">Approve and send to employer for approval</span>
                        </label>
                    }
                    else
                    {
                        <label class="block-label" for="@Html.IdFor(m => m.SaveOrSendStatus)-Approve">
                            @Html.RadioButtonFor(m => m.SaveOrSendStatus, SaveOrSendStatus.Approve, new { id = Html.IdFor(m => m.SaveOrSendStatus) + "-Approve" })
                            <span id="changeOne">Approve</span>
                        </label>
                    }
                    
                    <label class="block-label" for="@Html.IdFor(m => m.SaveOrSendStatus)-SendAmend">
                        @Html.RadioButtonFor(m => m.SaveOrSendStatus, SaveOrSendStatus.AmendAndSend, new { id = Html.IdFor(m => m.SaveOrSendStatus) + "-SendAmend" })
                        <span id="changeTwo">Send to employer to amend or add details</span>
                    </label>
                    <label class="block-label" for="@Html.IdFor(m => m.SaveOrSendStatus)-SaveNoSend">
                        @Html.RadioButtonFor(m => m.SaveOrSendStatus, SaveOrSendStatus.Save, new { id = Html.IdFor(m => m.SaveOrSendStatus) + "-SaveNoSend" })
                        <span id="changeThree">Save but don’t send to employer</span>
                    </label>
                </div>

                <div style="margin-top:20px;">
                    @Html.HiddenFor(m => m.ProviderId)
                    @Html.HiddenFor(m => m.CommitmentId)
                    <input type="submit" class="button" id="paymentPlan" value="Continue" />
                </div>
            </form>

        </div>
        <div style="margin-top:35px"></div>
        <div style="margin-top:50px"></div>
    </div>

    <div class="column-one-third">

    </div>
</div>
