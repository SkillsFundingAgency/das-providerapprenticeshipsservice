﻿@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models.Types
@model FinishEditingViewModel

@{
    ViewBag.Title = "Finish editing";
    ViewBag.PageId = "finish-editing";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <a href="@Url.Action("Details", 
                new { Model.ProviderId, Model.HashedCommitmentId })" aria-label="Back" class="link-back">Back</a>

        <h1 class="heading-xlarge">Finish editing</h1>
        <div>
            <form action="@Url.Action("FinishEditing")" method="POST">
                @Html.AntiForgeryToken()
                @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

              

                <legend class="visuallyhidden">Things to do next</legend>
                <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.SaveStatus, "error")">
                    <div>
                        @Html.ValidationMessageFor(m => m.SaveStatus, "Please choose an option", new { id = "error-message-" + Html.IdFor(m => m.SaveStatus) })
                    </div>
                    @if (Model.ApproveAndSend)
                    {
                        <label class="block-label" for="@RadioButtonId(SaveStatus.ApproveAndSend)">
                            @Html.RadioButtonFor(m => m.SaveStatus, SaveStatus.ApproveAndSend, new { id = RadioButtonId(SaveStatus.ApproveAndSend) })
                            <span id="changeOne">Approve and send to employer for approval</span>
                        </label>
                    }
                    else
                    {
                        <label class="block-label" for="@RadioButtonId(SaveStatus.Approve)">
                            @Html.RadioButtonFor(m => m.SaveStatus, SaveStatus.Approve, new { id = RadioButtonId(SaveStatus.Approve) })
                            <span id="changeOne">Approve</span>
                        </label>
                    }

                    <label class="block-label" for="@RadioButtonId(SaveStatus.AmendAndSend)">
                        @Html.RadioButtonFor(m => m.SaveStatus, SaveStatus.AmendAndSend, new { id = RadioButtonId(SaveStatus.AmendAndSend) })
                        <span id="changeTwo">Send to employer to amend or add details</span>
                    </label>

                    <label class="block-label" for="@RadioButtonId(SaveStatus.Save)">
                        @Html.RadioButtonFor(m => m.SaveStatus, SaveStatus.Save, new { id = RadioButtonId(SaveStatus.Save) })
                        <span id="changeThree">Save but don’t send to employer</span>
                    </label>
                </div>

                <div style="margin-top:20px;">
                    @Html.HiddenFor(m => m.ProviderId)
                    @Html.HiddenFor(m => m.HashedCommitmentId)
                    <input type="submit" class="button" id="paymentPlan" value="Continue" />
                </div>
            </form>

        </div>
        <div style="margin-top:35px"></div>
        <div style="margin-top:50px"></div>
    </div>

    <div class="column-one-third">

    </div>
</div>

@functions
{
    public string RadioButtonId(SaveStatus status)
    {
        return $"{Html.IdFor(m => m.SaveStatus)}-{status}";
    }
}
