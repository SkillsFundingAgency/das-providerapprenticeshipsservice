@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models

@model ApprenticeshipViewModel

@{
    ViewBag.Title = "Edit an apprentice";
    ViewBag.PageId = "edit-apprentice";
}

@section pageSpecificJS {
    @Scripts.Render("~/bundles/apprentice")
}

<div class="grid-row">
    <div class="column-two-thirds">

        <form method="POST" action="@Url.Action("Edit")">
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)


            @Html.AntiForgeryToken()

            @{ var validation = Html.ViewData["ApprovalWarningState"] as FluentValidation.Results.ValidationResult;
                var cantApproveClass = validation != null && !validation.IsValid
                         ? "cant-approve" : "";
                 }

            <h1 class="heading-xlarge">Edit an apprentice</h1>
            
            <div class="panel panel-border-wide">
                

             
                @if (validation != null && !validation.IsValid)
                {
                    <p>
                        You can only receive payments for this apprentice once all the fields have been completed - either by yourself or the employer.

                    </p>
                }
    
                else
                {
                    <p>
                        You can only receive payments for this apprentice once all the fields have been completed - either by yourself or the employer.

                    </p>
                }

               
            </div>
            <hr/>
            <div class="form-group 
                    @Html.AddClassIfPropertyInError(x => x.FirstName, "error")">
                
                @Html.LabelFor(m => m.FirstName, "First name", new { @class = "form-label form-label-bold" })
                @Html.ValidationMessageFor(m => m.FirstName, null, new { id = "error-message-" + Html.IdFor(m => m.FirstName) })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control form-control-3-4" })
            </div>
            <div class="form-group 
                    @Html.AddClassIfPropertyInError(x => x.LastName, "error")">
                @Html.LabelFor(m => m.LastName, "Last name", new { @class = "form-label form-label-bold" })
                @Html.ValidationMessageFor(m => m.LastName, null, new { id = "error-message-" + Html.IdFor(m => m.LastName) })
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control form-control-3-4" })
            </div>

            <div class="form-group @Html.AddClassIfPropertyInError(x => x.NINumber, "error")">
                <hr/>
                @Html.LabelFor(m => m.NINumber, "National insurance number", new { @class = "form-label form-label-bold" })
                @Html.ValidationMessageFor(m => m.NINumber, null, new { id = "error-message-" + Html.IdFor(m => m.NINumber) })
                @Html.TextBoxFor(m => m.NINumber, new { @class = "form-control form-control-3-4" })
            </div>

            <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.DateOfBirthDay, "error") @Html.AddClassIfPropertyInError(x => x.DateOfBirthMonth, "error") @Html.AddClassIfPropertyInError(x => x.DateOfBirthYear, "error")">
                <hr />
                <span class="form-label-bold">Date of birth</span>
                <span class="form-hint">For example, 08 12 2001</span>

                <div class="form-date">
                    @Html.ValidationMessageFor(m => m.DateOfBirthDay, "Enter a valid day", new { id = "error-message-" + Html.IdFor(m => m.DateOfBirthDay), @class = "error-message" })
                    @Html.ValidationMessageFor(m => m.DateOfBirthMonth, "Enter a valid month", new { id = "error-message-" + Html.IdFor(m => m.DateOfBirthMonth), @class = "error-message" })
                    @Html.ValidationMessageFor(m => m.DateOfBirthYear, "Enter a valid year", new { id = "error-message-" + Html.IdFor(m => m.DateOfBirthYear), @class = "error-message" })
                        

                    <div class="form-group form-group-day">
                        <label for="@Html.IdFor(m => m.DateOfBirthDay)">
                            Day
                        </label>
                        @Html.TextBoxFor(m => m.DateOfBirthDay, new { @class = "form-control", type = "number", aria_labelledby = Html.IdFor(m => m.DateOfBirthDay) })
                    </div>
                    <div class="form-group form-group-month">
                        <label for="@Html.IdFor(m => m.DateOfBirthMonth)">
                            Month
                        </label>
                        @Html.TextBoxFor(m => m.DateOfBirthMonth, new { @class = "form-control", type = "number", aria_labelledby =  Html.IdFor(m => m.DateOfBirthMonth) })
                    </div>
                    <div class="form-group form-group-year">
                        <label for="@Html.IdFor(m => m.DateOfBirthYear)">
                            Year
                        </label>
                        @Html.TextBoxFor(m => m.DateOfBirthYear, new { @class = "form-control", type = "number", aria_labelledby = Html.IdFor(m => m.DateOfBirthYear) })
                    </div>
                </div>
            </div>


            <div class="form-group @Html.AddClassIfPropertyInError(x => x.ULN, "error")">
                <hr />
                <label for="@Html.IdFor(m => m.ULN)">
                    <span class="form-label form-label-bold">Unique learner number</span>
                    @Html.ValidationMessageFor(m => m.ULN, null, new { id = "error-message-" + Html.IdFor(m => m.ULN), @class = "error-message" })
                </label>
                @Html.TextBoxFor(m => m.ULN, new { @class = "form-control form-control-3-4", type = "number", aria_labelledby =  Html.IdFor(m => m.ULN) })
            </div>

            <div class="form-group">
                <hr />
                <label class="form-label-bold" for="TrainingCode">Apprenticeship training course</label>
                <select name="TrainingCode" id="TrainingCode" class="form-control form-control-3-4" aria-label="Apprenticeship training course">
                    <option value="">Please select</option>
                    @foreach (var programme in ViewBag.ApprenticeshipProgrammes)
                    {
                        <option value="@programme.Id" @if (programme.Id.ToString() == Model.TrainingCode)
                                                        {
                                                            @Html.Raw("selected")
                                                        }>

                            @programme.Title
                        </option>
                    }
                </select>
            </div>

            <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.StartMonth, "error") @Html.AddClassIfPropertyInError(x => x.StartYear, "error")">
                <fieldset>
                    <legend>
                        <span class="form-label-bold">Planned training start date</span>
                        <span class="form-hint">For example, 09 2017</span>
                    </legend>
                    <div class="form-date">
                        @Html.ValidationMessageFor(m => m.StartMonth, "Enter a valid month", new { id = "error-message-" + Html.IdFor(m => m.StartMonth), @class = "error-message" })
                        @Html.ValidationMessageFor(m => m.StartYear, "Enter a valid year", new { id = "error-message-" + Html.IdFor(m => m.StartYear), @class = "error-message" })
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.StartMonth)">
                                <span class="form-label-bold">Month</span>
                            </label>
                            @Html.TextBoxFor(m => m.StartMonth, new { @class = "form-control", type = "text", aria_labelledby = Html.IdFor(m => m.StartMonth) })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.StartYear)">
                                <span class="form-label-bold">Year</span>
                            </label>
                            @Html.TextBoxFor(m => m.StartYear, new { @class = "form-control", type = "text", aria_labelledby = Html.IdFor(m => m.StartYear) })
                        </div>
                    </div>
                </fieldset>
            </div>

            <div class="form-error-group form-group @Html.AddClassIfPropertyInError(x => x.EndMonth, "error") @Html.AddClassIfPropertyInError(x => x.EndYear, "error")">
                <fieldset>
                    <legend>
                        <span class="form-label-bold">Projected finish date</span>
                        <span class="form-hint">For example, 02 2019</span>
                    </legend>
                    <div class="form-date">
                        @Html.ValidationMessageFor(m => m.EndMonth, "Enter a valid month", new { id = "error-message-" + Html.IdFor(m => m.EndMonth), @class = "error-message" })
                        @Html.ValidationMessageFor(m => m.EndYear, "Enter a valid year", new { id = "error-message-" + Html.IdFor(m => m.EndYear), @class = "error-message" })
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.EndMonth)">
                                <span class="form-label-bold">Month</span>
                            </label>
                            @Html.TextBoxFor(m => m.EndMonth, new { @class = "form-control", type = "text", aria_labelledby = Html.IdFor(m => m.EndMonth) })
                        </div>
                        <div class="form-group form-group-month">
                            <label for="@Html.IdFor(m => m.EndYear)">
                                <span class="form-label-bold">Year</span>
                            </label>
                            @Html.TextBoxFor(m => m.EndYear, new { @class = "form-control", type = "text", aria_labelledby = Html.IdFor(m => m.EndYear) })
                        </div>
                    </div>
                </fieldset>

            </div>

            <div class="form-group @Html.AddClassIfPropertyInError(x => x.Cost, "error")">
                <hr/>
                <label for="@Html.IdFor(m => m.Cost)">
                    <span class="form-label-bold">Total agreed training cost (excluding VAT)</span>
                    <span class="form-hint">For example, for £1,500 enter 1500</span>
                    @Html.ValidationMessageFor(m => m.Cost, "Enter the cost in whole pounds", new { id = "error-message-" + Html.IdFor(m => m.Cost), @class = "error-message" })
                </label>
                <span class="heading-small">£ </span>@Html.TextBoxFor(m => m.Cost, new { @class = "form-control form-control-3-4", type = "text", aria_labelledby =  Html.IdFor(m => m.Cost) })
            </div>

            <div class="form-group @Html.AddClassIfPropertyInError(x => x.ProviderRef, "error")">
                @Html.LabelFor(m => m.ProviderRef, "Reference (optional)", new { @class = "form-label-bold" })
                <span class="form-hint">Add a reference, such as employee number or location - this can help identify this apprentice if you have more than one with the same name.</span>
                @Html.ValidationMessageFor(m => m.ProviderRef, null, new { id = "error-message-" + Html.IdFor(m => m.ProviderRef) })
                @Html.TextBoxFor(m => m.ProviderRef, new { @class = "form-control form-control-3-4" })
            </div>

            @Html.HiddenFor(m => m.HashedCommitmentId)
            @Html.HiddenFor(m => m.ProviderId)
            @Html.HiddenFor(m => m.AgreementStatus)
            @Html.HiddenFor(m => m.EmployerRef)

            <button type="submit" class="button">Save</button>

            <a class="links" href="@Url.Action("Details", new { Model.HashedCommitmentId })" aria-label="Cancel">Cancel</a>

        </form>
    </div>
</div>


@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">

            <li><a href="@Url.Action("Details", new { Model.HashedCommitmentId })" aria-label="Back" class="back-link">Back</a></li>

        </ol>
    </div>
}