@using SFA.DAS.Commitments.Api.Types.DataLock.Types
@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions
@using SFA.DAS.ProviderApprenticeshipsService.Web.Models.DataLock
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.DataLock.DataLockMismatchViewModel

@{
    ViewBag.Title = "Request restart";
    ViewBag.PageId = "course-mismatch";

    var datalock = Model.DataLockSummaryViewModel.DataLockWithCourseMismatch
.Where(x => x.TriageStatusViewModel == TriageStatusViewModel.Unknown)
.OrderBy(x => x.IlrEffectiveFromDate)
.First();
}


<div class="grid-row">
    <div class="column-two-thirds">
        @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

        <h1 class="heading-xlarge">Course mismatch</h1>

        <p>Details for this apprentice are different in your organisation's ILR submission. </p>

        <table class="app-data">
            <tbody>
                <tr>
                    <td class="first-child">Name</td>
                    <td class="first-child"> @Model.DasApprenticeship.FirstName @Model.DasApprenticeship.LastName</td>
                </tr>
                <tr>
                    <td>Unique learner number</td>
                    <td>@Model.DasApprenticeship.ULN</td>
                </tr>
            </tbody>
        </table>


        <table class="edited-changes">
            <thead>
            <tr>
                <th scope="col">Period</th>
                <th scope="col">Apprenticeship service</th>
                <th scope="col">ILR submission</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>
                    @if (datalock.IlrEffectiveFromDate.HasValue)
                    {
                        var dateDetails = $"From {datalock.IlrEffectiveFromDate.Value.ToGdsFormat()} onwards";
                       @dateDetails
                    }
                    else
                    {
                        <span>--</span>
                    }
                </td>
                <td>@Model.DasApprenticeship.TrainingName </td>
                <td>@datalock.IlrTrainingCourseName </td>
            </tr>

            </tbody>
        </table>
    </div>
</div>


<div class="grid-row">
    <div class="column-two-thirds">
        <form method="POST" action="@Url.Action("RequestRestart")" novalidate="novalidate">

            @Html.AntiForgeryToken()
            <div class="form-group">
                <fieldset>
                    <h2 class="heading-medium">How do you want to fix the mismatch?</h2>
                    <legend class="visually-hidden">How do you want to fix the mismatch?</legend>
                    <div class="form-group @Html.AddClassIfPropertyInError(x => x.SubmitStatusViewModel, "error")">
                        @Html.ValidationMessageFor(m => m.SubmitStatusViewModel, "Please choose an option", new { id = "error-message-" + Html.IdFor(m => m.SubmitStatusViewModel) })
                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.Confirm)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.Confirm, new { id = RadioButtonId(SubmitStatusViewModel.Confirm) })
                            <span>
                                Change apprenticeship service records to match the ILR
                            </span>
                        </label>

                        @*<label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.UpdateDataInIlr)">
                                @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.UpdateDataInIlr, new { id = RadioButtonId(SubmitStatusViewModel.UpdateDataInIlr) })
                                <span>Update the details through the ILR instead</span>
                            </label>*@

                        <label class="block-label selection-button-radio" for="@RadioButtonId(SubmitStatusViewModel.None)">
                            @Html.RadioButtonFor(m => m.SubmitStatusViewModel, SubmitStatusViewModel.None, new { id = RadioButtonId(SubmitStatusViewModel.None) })
                            <span> I'll update the ILR later </span>
                        </label>

                    </div>
                    @Html.HiddenFor(m => datalock.DataLockEventId)
                    

                    <div class="grid-row" id="cont-cancel">
                        <div class="column-full">
                            <input type="submit" class="button continue" id="fix-mismatch" value="Continue" />
                            <a href="@Url.Action("Details", "ManageApprentices")" aria-label="Cancel" class="cancel"> Cancel</a>
                        </div>
                    </div>

                </fieldset>
            </div>
        </form>
    </div>
</div>


@functions
{

    public string RadioButtonId(SubmitStatusViewModel statusViewModel)
    {
        return $"{Html.IdFor(m => m.SubmitStatusViewModel)}-{statusViewModel}";
    }

}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Details", "ManageApprentices")" aria-label="Back to apprentice details" class="back-link">Back to apprentice details</a>
    </div>
}