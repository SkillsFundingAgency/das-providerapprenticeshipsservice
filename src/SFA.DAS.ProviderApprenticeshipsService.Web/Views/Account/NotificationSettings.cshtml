@using SFA.DAS.ProviderApprenticeshipsService.Web.Extensions;
@model SFA.DAS.ProviderApprenticeshipsService.Web.Models.Settings.NotificationSettingsViewModel
@{
    ViewBag.Title = "NotificationSettings";
    ViewBag.PageId = "notification-settings";
}

@* ReSharper disable once Razor.SectionNotResolved - in shared provider layout *@
@section breadcrumb {
    <partial name="_BreadCrumbs" />
}

@* ReSharper disable once Razor.SectionNotResolved - in shared provider layout *@
@section Styles {
    <link href="/css/app.css" rel="stylesheet" no-cdn />    
}

@* ReSharper disable once Razor.SectionNotResolved - in shared provider layout *@
@section Scripts {
    <script src="/js/site.js" no-cdn></script>
}


<div class="grid-row">
    <div class="column-two-thirds">
        <form method="post">
            @Html.AntiForgeryToken()
            <h1 class="heading-xlarge">Notification settings</h1>
            <p>Choose whether you want to receive cohort, apprentice and recruitment notification emails.</p>
            <p>Changing these settings will not affect service emails, like password resets.</p>

            <table>
                <thead>
                    <tr>
                        <th scope="col">Account name</th>
                        <th scope="col">Emails</th>
                        <th scope="col">No emails</th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.NotificationSettings.Count; i++)
                    {
                        var setting = Model.NotificationSettings[i];

                        <tr>
                            <td class="notification-row">
                                @setting.UserRef

                                @Html.Hidden($"NotificationSettings[{i}].UserRef", setting.UserRef)
                            </td>

                            <td class="notification-row">

                                @{
                                    var trueId = $"NotificationSettings-true-{i}";
                                    var falseId = $"NotificationSettings-false-{i}";
                                }

                                <label for="@trueId" class="block-label selection-button-radio" aria-label="Send emails">
                                    @Html.RadioButton($"NotificationSettings[{i}].ReceiveNotifications", true, setting.ReceiveNotifications, new { id = trueId })
                                </label>

                            </td>

                            <td class="notification-row">
                                <label for="@falseId" class="block-label selection-button-radio" aria-label="Stop emails">
                                    @Html.RadioButton($"NotificationSettings[{i}].ReceiveNotifications", false, !setting.ReceiveNotifications, new { id = falseId })
                                </label>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <button type="submit" class="button" id="submit-email-alerts">Update</button>
            <p><a href="/" class="text-link">Cancel</a></p>
            <a asp-external-subdomain="recruit" asp-external-controller="" asp-external-action="notifications-manage" asp-external-id="@Model.ProviderId">Manage the notifications of your recruitment emails</a>
            @* <a href="@Url.RecruitLink($"{Model.ProviderId}")/notifications-manage">Manage the notifications of your recruitment emails</a> *@
        </form>
    </div>
</div>
